name: Build and Deploy to GCP Cloud Run

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  GCP_PROJECT_ID: my-project-id
  APPLICATION_NAME: employees-api

jobs:
  run-tests:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3 # <-- Clones your GitHub repository into the runner (the VM executing the workflow)

      - name: Set up JDK 17
        uses: actions/setup-java@v3  # <-- used to set up a specific Java Development Kit (JDK) version on the runner
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Run tests with Maven
        run: mvn test # <-- used to executes terminal commands.

  build:
    name: Build App
    runs-on: ubuntu-latest
    needs: run-tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v3 # <-- Clones your GitHub repository into the runner (the VM executing the workflow)

      - name: Set up JDK 17
        uses: actions/setup-java@v3  # <-- used to set up a specific Java Development Kit (JDK) version on the runner
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Build with Maven
        run: mvn clean package -DskipTests # <-- used to executes terminal commands.

      - name: Upload build artifact
        uses: actions/upload-artifact@v4 # <-- used to upload build artifacts (files/folders) from your workflow so they can be downloaded later (either in another job or manually from the Actions UI)
        with:
          name: app-jar
          path: target/*.jar

  print-message-pr:
    if: github.event_name == 'pull_request'
    name: Print message if event is PR
    runs-on: ubuntu-latest
    needs: build
    steps:
      - run: echo "Hello world"

  docker:
    name: Create Docker Container
    runs-on: ubuntu-latest
    needs: build   # <-- this job waits for "build" to complete
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: app-jar

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Google Cloud CLI
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker us-central1-docker.pkg.dev

      - name: Build and Push Docker image to Artifact Registry
        run: |
          IMAGE=us-central1-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/my-docker-repo/${{env.APPLICATION_NAME}}:${{ github.sha }}
          docker build -t $IMAGE .
          docker push $IMAGE

  deploy:
    name: Deploy the application
    runs-on: ubuntu-latest
    needs: docker  # <-- waits for docker job to finish
    steps:
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Google Cloud CLI
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{env.APPLICATION_NAME}}
            --image us-central1-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/my-docker-repo/${{env.APPLICATION_NAME}}:${{ github.sha }} \
            --region us-central1 \
            --platform managed \
            --allow-unauthenticated
